<%- include('../public/base.html') %>
  <h1 class="title-chat">CHAT ROOM</h1>

  <!-- START: Register -->
  <form class="form-join" id="form-join">
    <input type="text" placeholder="Username">
    <button type="submit">Join</button>
  </form>
  <!-- END: Register -->

  <div class="box-chat" id="box-chat">
    <div class="message-container" id="message-container">
    </div>

    <div class="form-message">
      <input type="text" placeholder="Masukkan pesan" id="message" type="text">
      <button type="button" id="btn-send">Send</button>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    const messageContainer = document.getElementById('message-container');
    const btnSend = document.getElementById('btn-send');
    const message = document.getElementById('message');
    const boxChat = document.getElementById('box-chat');
    const formJoin = document.getElementById('form-join');
    let username;
    
    const checkUser = () => {
      const user = localStorage.getItem('user');
      if (!user) {
        return false;
      }
      username = JSON.parse(user).username;
      return true;
    }

    document.addEventListener('DOMContentLoaded', () => {
      const isJoined = checkUser();
      if (isJoined) {
        boxChat.style.display = 'flex';
        formJoin.style.display = 'none';
      } else {
        boxChat.style.display = 'none';
        formJoin.style.display = 'flex';
      }
    });

    // Join to chat room
    const joinHandler = (e) => {
      e.preventDefault();
      const user = e.target[0].value;
      if (user) {
        username = user;
        boxChat.style.display = 'flex';
        formJoin.style.display = 'none';
        
        localStorage.setItem('user', JSON.stringify({ username: user }));
      }
    }

    // Send user message
    const sendHandler = (e) => {
      e.preventDefault();
      if (message.value) {
        const div = document.createElement('div');
        const newMessage = document.createElement('p');
        newMessage.textContent = message.value;
        const data = {
          id: socket.id,
          message: {
            username: username,
            text: message.value,
          },
        };
        socket.emit('message', data);
        div.appendChild(newMessage);
        div.classList.add('message-sender');
        messageContainer.appendChild(div);
        message.value = '';
      }
    }

    // Listener
    formJoin.addEventListener('submit', joinHandler);
    message.addEventListener('keypress', (e)=>{
      if(e.key === 'Enter') {
        sendHandler(e);
      }
    });
    btnSend.addEventListener('click', sendHandler);

    // Get message
    socket.on('message', (id, message) => {
      const broadcast = document.createElement('div');
      const user = document.createElement('p');
      const newMessage = document.createElement('p');
      broadcast.classList.add('message-receiver');
      user.textContent = message.username;
      user.classList.add('username');
      newMessage.textContent = message.text;
      broadcast.appendChild(user);
      broadcast.appendChild(newMessage);
      messageContainer.appendChild(broadcast);
    });
  </script>

